//是否提交到仓库
def upload = true
def release = false
def version_name = android.defaultConfig.versionName

if (upload){

    // 引入maven工具
    apply plugin: 'maven'

    //apply plugin: 'signing'

//    signing {
//        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives")}
//        sign configurations.archives
//    }

    // 生成Javadoc文档
    task androidJavadocs(type: Javadoc) {
        // 设置源码所在的位置
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        options {
            encoding "UTF-8"
            charSet 'UTF-8'
            author true
            version true
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        }
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }


    // 生成Javadoc文档jar包
    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        // 指定文档名称
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }


    // 防止编码问题
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }


    // 生成源码文件jar包
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }


    artifacts {
        // 源码文件jar包执行命令
        archives androidSourcesJar
        // Javadoc文档jar包执行命令
        archives androidJavadocsJar
        //当前aar 文件名
//        if (release){
//            "${project.buildDir}/outputs/aar/${project.name}-release.aar"
//        }else{
//            "${project.buildDir}/outputs/aar/${project.name}-debug.aar"
//        }
    }


    // 上传命令
    uploadArchives {
        repositories {
            mavenDeployer {
                //这里的   url是nexus中maven-releases的路径，可以点击copy按钮查看复制
                repository(url: RELEASE_URL) {
                    // userName 私服仓库账号 password 私服仓库账号密码
                    authentication(userName: MAVENNAME, password: MAVENPASSWORD)
                }

                snapshotRepository(url: SNAPSHOT_URL) {
                    authentication(userName: MAVENNAME, password: MAVENPASSWORD)
                }

                // //引用时使用如下格式： implementation 'groupId:artifactId:version'
                pom.project {

                    // library的版本号
                    // 版本号，有更新时修改版本号，在上传
                    //version  release ? rootProject.ext.uploadArchives["lk_utils_support"] : rootProject.ext.uploadArchives["lk_utils_support"] + '-SNAPSHOT'

                    version  release ? version_name : version_name + '-SNAPSHOT'

                    // library的项目名
                    // 模块名字（每个模块不一样）
                    artifactId 'utils'

                    // library的包名
                    // //一般使用的是公司的网址
                    groupId 'com.learkoo.module'

                    // 打包类型
                    packaging 'aar'

                    // 描述信息
                    description '工具模块 常用的通用工具类'
                }
            }
        }
    }
}